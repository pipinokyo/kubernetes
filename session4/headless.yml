# A Headless Service is a specialized Kubernetes service that provides direct DNS access to individual Pods rather than load balancing across them.
# Unlike regular services, it doesn't assign a ClusterIP, enabling direct Pod-to-Pod communication.

#     Feature	                                     Description
# Direct Pod Access	                Clients connect to Pod IPs, bypassing kube-proxy.
# DNS A Records	                    Returns all Pod IPs (no single ClusterIP).
# StatefulSet Integration	          Works seamlessly with StatefulSet (stable Pod hostnames).
# No Load Balancing	                Clients handle traffic distribution.

# ✅ Stateful Applications (e.g., Cassandra, MongoDB, Elasticsearch)
# ✅ Peer Discovery (Pods need direct communication)
# ✅ Custom Load Balancing (client-side logic)
# ✅ Service Meshes (e.g., Istio mTLS between Pods)
# ❌ Avoid for stateless apps (use ClusterIP instead).

# This file defines a Kubernetes Service of type Headless for an application labeled "nginx".
# It specifies the selector to match the pods, and sets clusterIP to None, allowing direct access to individual Pods.

apiVersion: v1                    # This line specifies the API version of the Kubernetes object.           
kind: Service                     # This line indicates that the object is a Service.              
metadata:
  name: simple-headless-service   # This line sets the name of the Service.
spec:
  selector:
    app: nginx                    # This line defines the selector to match the pods with the label 'app: nginx'.       
  clusterIP: None                 # This line sets the clusterIP to None, making it a headless service.
  ports:
    - port: 80
      targetPort: 80